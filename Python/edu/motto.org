
* Jargon

** Munge/Munging/Wrangling
   Describes the overall process of manipulating unstructured and/or messy data
   into a structured or clean form. The word has snuck its way into the jargon
   of many modern day data hackers. Munge rhymes with “lunge”.

** Interacting with the outside world
   Reading and writing with a variety of file formats and databases.

** Preparation
   Cleaning, munging, combining, normalizing, reshaping, slicing and dicing, and
   transforming data for analysis.

** Transformation
   Applying mathematical and statistical operations to groups of data sets to
   derive new data sets. For example, aggregating a large table by group variables.

** Modeling and computation
   Connecting your data to statistical models, machine learning algorithms, or other
   computational tools

** Presentation
   Creating interactive or static graphical visualizations or textual summaries



* Knowledge is power;						       :True:
** it is product of education;					       :True:

*** TODO reading;

*** TODO thinking;

*** TODO practicing;

** all knowledges reside in the memory;

*** they require repetition;

*** the spaced repetition is the best approach;

* Dive deeper into Python programming language

** in six months
   
** with:

*** Python3
*** Standard approaches
*** NLTK
*** NumPy
*** pandas
*** matplotlib
*** IPython
*** SciPy

http://github.com/pydata/pydata-book


** by studying:

*** Python for Data Analyse
**** DONE Preliminaries
**** TODO Introductory Examples <2016-01-18 Mon>
***** collections pack
**** TODO IPython: An Interactive Computing and Development Environment
     <2016-01-18 Mon>
*** Programming Python 4th Edition
**** DONE Install and test Python3 devEnv
     virtualenv -p /usr/bin/python3 yourenv
     source yourenv/bin/activate
     pip install ipython
     DEADLINE: <2016-01-19 Tue>
*** NLP with Python

* Enhance general coding grit
** [[https://drive.google.com/file/d/0BzoOGnxA0v1FSkFNSXg4MWVpTkE/view?usp%3Dsharing][Crack Coding Interview]]
*** [[http://careercup.com/][Additional information]] on website
* Enlarge Emacs toolbox
** DONE [[http://elpy.readthedocs.org/en/latest/ide.html#documentation][Elpy]]
** DONE [[http://capitaomorte.github.io/yasnippet/][YaSnippet]]
*** predefined snippets for PyMode ~/.emacs.d/elpa/elpy-1.10.0/snippets/python-mode/
** DONE OrgMode [[http://orgmode.org/orgcard.pdf][refCard]] <2016-01-18 Mon>
** DONE [[http://www.emacswiki.org/emacs/key-chord.el][KeyChord]] <2016-01-18 Mon>
*** mkdir ~/.emacs.d/lisp/
**** put into it key-chord.el
**** and key-chord-map.el:
     (key-chord-define-global "hj"     'undo)
     (provide 'key-chord-map)
*** add into init.el:
    (add-to-list 'load-path "~/.emacs.d/lisp/")
    (require 'key-chord)
    (key-chord-mode 1)
    (require 'key-chord-map)





This is a sample text to reveiw key-chords
How it works
