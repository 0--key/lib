def description_processing(input_dict, instance, bulkload_state_copy):
    query = "SELECT * FROM Company WHERE company_name='%s' AND address='%s'" % (input_dict['company_name'], input_dict['address'])
    q = db.GqlQuery(query)
    for i in q:
        instance['company'] = i.key()
        if len(input_dict['description_headers'].split('###'))>1:
            # it is for splitting description articles into chunks
            spread_instance = []
            new_instance = {}
            k=0
            for j in input_dict['description_paragraphs'].split('###'):
                new_instance['paragraph'] = j
                new_instance['header'] = input_dict['description_headers'].split('###')[k]
                new_instance['company'] = instance['company']
                spread_instance.append(new_instance)
                k = k+1
                logging.info(new_instance)
            logging.info(spread_instance)
            return spread_instance
                
        else:
            logging.info(input_dict)
            logging.info(instance)
            return instance
    """except:
        logging.info('company name value is: %r', input_dict['company_name'])
        logging.info('site url value is: %r', input_dict['company_site_url'])
        logging.info('short description value is: %r', input_dict['short_description'])
        logging.info('address value is: %r', input_dict['address'])
        logging.info('phone value is: %r', input_dict['phone'])
        logging.info('phone_type value is: %r', input_dict['phone_type'])
        logging.info('general description value is: %r', input_dict['gen_description'])
        logging.info('tags value is: %r', input_dict['tags'])
        logging.info('category value is: %r', input_dict['category'])"""
