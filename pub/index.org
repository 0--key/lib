#+TITLE:     Emacs and Python
#+SUBTITLE:  How to enjoy yourself ._/\/\/^\/\/\/-<8<
#+AUTHOR:    Anton S. Kosinov
#+EMAIL:     a.s.kosinov@gmail.com
#+DOCTYPE:   html5
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:nil toc:t \n:nil @:t ::t |:t ^:{} _:{} *:t
#+STARTUP:   showall

* Short intro

# Next would be as a TDD sample a literate code for work slick on yours hosts.
# On a flip side ultimative and working code to serve you as a gauge and start
# point of blowsome journey across and inside out whole kindom of knowledge. 
# Exactly to simplify your Python all code samples should be run in a slick manner, 
# hence it all Ellipsis

* Brief prelude

# Any science has experience forged and enveloped in some skill. Data science
# by its nature built on data. Read-only access is an initial proves possession 
# over some particular data. There are several much precise tools to compose quires 
# and get much informative data out of array. It's the second flow on data processing 
# functions list. The third one might be data integrity checking strategy on duty to 
# prevent any data corruption and lost. And as a final stage in deriving data on the
# preparation table scrutiny.


* General description

# There are infinite number of wrong approaches and the best path to achieve some skill
# is to learn it by doing. For example it's completely impossible to play basketball 
# with no ideas about the rules of this dexterity demonstration. As another premise 
# of apprenticeship it might be noticed about Ancient Greek samples of great thinkers,
# who ponder about most of our modern science in the same way. All they was scholars
# and learn all life long.


* Preamble

# Of cause learning by doing is a final stage in human creativity. It requires a lot of 
# passion, huge amount of time and hardships happen certainly. And it is a peculiar time
# machine. There is one way further, and a lot of noways.

# Introduction

# Python 3.4.1 under the detailed scrutiny by unittest module.

# Description

# Literate programming book for wide range of learners by reading and typing. A little bit 
# of primitive mathematics used for self-explanatory clarity in proves. All language's features 
# hooks and idioms are available to test on Emacs frame.

* Prerequisites

# Ubuntu 14/16.04
# Python3
# Emacs 24.4

* Methodology

# In my humble opinion the best way to learn programming language lies in
# reading source code of working code samples. Code and its output are crucially
# dense (habitually awkward) text. Read and run it by yourself. It's vivid and unique thus useful for education.
# If you wish to unleash your brain feel free to modify or even improve my code.
# In any case good luck, be calm and detect calamity in their seeds.

* Topics

* Feedback

* Conclusion
