#+TITLE:     Emacs org-mode examples
#+AUTHOR:    Anton S. Kosinov
#+EMAIL:     a.s.kosinov@gmail.com
#+LANGUAGE: en
#+OPTIONS: num:nil toc:t \n:nil @:t ::t |:t ^:{} _:{} *:t

* It's first export to html test
* Scientific usage proves that it might be awesome
** Installation Guide

   Evaluate expression below in *scratch* buffer to determine
   where org expects to seeks its libraries by default config:

     #+BEGIN_SRC elisp :exports both
       (expand-file-name
       "ditaa.jar"
       (file-name-as-directory
       (expand-file-name
       "scripts"
       (file-name-as-directory
       (expand-file-name
       "../contrib"
       (file-name-directory (org-find-library-dir "org")))))))
     #+END_SRC

     #+RESULTS:
     : /home/antony/.emacs.d/elpa/contrib/scripts/ditaa.jar

     - Download, unzip, rename [[http://ditaa.sourceforge.net/][java package]] and locate it there
     - Add ~(ditaa . t)~ into org-babel-load-languages in your .emacs
** Test it:
*** Ditaa
      #+BEGIN_SRC org
      #+BEGIN_SRC ditaa :file img/color_test.png :exports both
	/----\ /----\
	|c33F| |cC02|
	|    | |    |
	\----/ \----/

	/----\ /----\
	|c1FF| |c1AB|
	|    | |    |
	\----/ \----/
      ,#+END_SRC

      #+RESULTS:
      [[file:img/color_test.png]]
      #+END_SRC

      [[file:img/color_test.png]]

      #+BEGIN_SRC org
      #+BEGIN_SRC ditaa :file img/second_color_test.png :exports both
	Color codes
	/-------------+-------------\
	|cRED RED     |cBLU BLU     |
	+-------------+-------------+
	|cGRE GRE     |cPNK PNK     |
	+-------------+-------------+
	|cBLK BLK     |cYEL YEL     |
	\-------------+-------------/

      ,#+END_SRC

      #+RESULTS:
      [[file:img/second_color_test.png]]
      #+END_SRC

      file:img/second_color_test.png
*** PlantUML
      #+BEGIN_SRC plantuml :file img/tryout.png
      Alice -> Bob: synchronous call
      Alice ->> Bob: asynchronous call
      #+END_SRC


      #+BEGIN_SRC plantuml :file img/comp.png
      package "Some Group" {
      HTTP - [First Component]
      [Another Component]
      }

      node "Other Groups" {
      FTP - [Second Component]
      [First Component] --> FTP
      }

      cloud {
      [Example 1]
      }


      database "MySql" {
      folder "This is my folder" {
      [Folder 3]
      }
      frame "Foo" {
      [Frame 4]
      }
      }


      [Another Component] --> [Example 1]
      [Example 1] --> [Folder 3]
      [Folder 3] --> [Frame 4]
      #+END_SRC


      #+BEGIN_SRC plantuml :file ./img/gradient.png
      skinparam backgroundcolor AntiqueWhite/Gold
      skinparam classBackgroundColor Wheat|CornflowerBlue

      class Foo #red-green
      note left of Foo #blue\9932CC
      this is my
      note on this class
      end note

      package example #GreenYellow/LightGoldenRodYellow {
      class Dummy
      }
      #+END_SRC
